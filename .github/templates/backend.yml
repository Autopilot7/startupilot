name: Backend CI/CD

on:
  push:
    branches:
      - production

jobs:
  check_folder_backend_changed:
    name: Check if backend folder changed
    runs-on: ubuntu-latest
    outputs:
      is_changed: ${{ steps.changes.outputs.backend }}

    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
              - 'backend/**'

      # run only if "backend" files were changed
      - name: backend is changed
        if: steps.changes.outputs.backend == 'true'
        run: echo "Folder backend has changed"

      # run only if "backend" files were not changed
      - name: backend is not changed
        if: steps.changes.outputs.backend == 'false'
        run: echo "Folder backend has not changed"

  build_and_push:
    name: Build and Push to Dockerhub Docker Image
    runs-on: ubuntu-latest
    needs: [check_folder_backend_changed]
    if: needs.check_folder_backend_changed.outputs.is_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Add .env file
        run: |
          cd backend
          echo "${{ secrets.BACKEND_ENV }}" > .env

      - name: Build backend Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKERHUB_REPOSITORY}}-backend:latest -f ./backend/Dockerfile.prod

      - name: Push backend Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME}}/${{ secrets.DOCKERHUB_REPOSITORY}}-backend:latest

  pull_and_run_on_server:
    name: Pull Config and Run Docker Image on server
    needs: [build_and_push]
    if: needs.check_folder_backend_changed.outputs.is_changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh/
          cd ~/.ssh/ 
          touch id_rsa && touch known_hosts && chmod 600 id_rsa
          echo "${{ secrets.SERVER_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa

      - name: Add server to known hosts
        run: ssh-keyscan ${{ secrets.SERVER_IP_ADDRESS}} >> ~/.ssh/known_hosts

      - name: Pull and run Docker images on server
        run: |
          ssh ${{ secrets.SERVER_USER}}@${{ secrets.SERVER_IP_ADDRESS}} 'docker pull ${{ secrets.DOCKERHUB_USERNAME}}/${{ secrets.DOCKERHUB_REPOSITORY}}-backend:latest'
          ssh ${{ secrets.SERVER_USER}}@${{ secrets.SERVER_IP_ADDRESS}} 'docker-compose up --build -d --force-recreate --remove-orphans web'
